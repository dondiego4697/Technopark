1. SELECT title FROM Movie WHERE director = 'Steven Spielberg' ORDER BY title;
2. SELECT EXTRACT(YEAR FROM ratingDate) FROM Rating WHERE stars > 3 AND stars < 6 ORDER BY ratingDate;
   SELECT EXTRACT(YEAR FROM ratingDate) FROM Rating WHERE stars >=4 AND stars <=5 ORDER BY ratingDate;
3. SELECT title FROM Movie WHERE mid IN (SELECT mid FROM Rating WHERE stars IS NULL) ORDER BY title;
4. SELECT name FROM Reviewer WHERE rid IN (SELECT rid FROM Rating WHERE ratingDate IS NULL) ORDER BY name;
5. SELECT Reviewer.name, Movie.title, Rating.stars FROM Reviewer, Movie, Rating WHERE Rating.mid = Movie.mid AND Rating.rid = Reviewer.rid ORDER BY Reviewer.name, Movie.title, Rating.stars;
6. SELECT movie.title AS title, max(rating.stars)-min(rating.stars) AS difference FROM movie, rating WHERE movie.mid = rating.mid GROUP BY title ORDER BY difference DESC, title;
SELECT title, max(stars) - min(stars) AS diff FROM Movie JOIN Rating ON Movie.mID = Rating.mID GROUP BY title ORDER BY diff DESC, title;
7. SELECT before.stars - after.stars as diff FROM (SELECT avg(tmp1.stars) as stars FROM (SELECT avg(stars) as stars, mid FROM rating GROUP BY mid) AS tmp1 JOIN movie ON tmp1.mid = movie.mid AND movie.year > 1980) as before, (SELECT avg(tmp1.stars) as stars FROM (SELECT avg(stars) as stars, mid FROM rating GROUP BY mid) AS tmp1 JOIN movie ON tmp1.mid=movie.mid AND movie.year < 1980) as after;
8. SELECT DISTINCT name FROM movie JOIN rating ON movie.mid = rating.mid AND title='FILM C' JOIN reviewer ON rating.rid=reviewer.rid ORDER BY name;
9. SELECT DISTINCT reviewer.name dir, Movie.title ttl, Rating.stars str FROM Movie, Rating, Reviewer WHERE Reviewer.rid = Rating.rid AND Movie.director = Reviewer.name AND movie.mid=rating.mid;
SELECT DISTINCT name, title, stars FROM rating JOIN reviewer ON rating.rid=reviewer.rid JOIN movie ON movie.mid=rating.mid AND reviewer.name=movie.director ORDER BY name, title, stars;
10. SELECT name AS col FROM Reviewer UNION SELECT title AS col FROM Movie ORDER BY col;
11. SELECT DISTINCT title FROM movie WHERE movie.mid NOT IN (SELECT mid FROM rating JOIN reviewer ON rating.rid=reviewer.rid WHERE name = 'Chris Jackson') ORDER BY title;
12. SELECT DISTINCT r1.name, r2.name FROM (SELECT ra.rID, name, mIDFROM Rating raJOIN Reviewer re ON ra.rID = re.rID ) as r1 JOIN (SELECT ra.rID, name, mID FROM Rating ra Reviewer re ON ra.rID = re.rID) as r2 ON r1.mID = r2.mID WHERE r1.name < r2.name;
13. SELECT avg(stars) as avg_stars, title FROM Rating r JOIN Movie m ON r.mID = m.mID GROUP BY m.mID, m.title ORDER BY avg_stars, title;
SELECT title, avg(stars) as av_stars FROM rating JOIN movie ON movie.mid=rating.mid GROUP BY movie.mid, movie.title ORDER BY av_stars, title;
14. SELECT name FROM Reviewer JOIN Rating ON Rating.rid = Reviewer.rid GROUP BY Rating.rid, Reviewer.name HAVING COUNT(Rating.rid) > 3;
15. SELECT title, director FROM movie WHERE director IN (SELECT director FROM movie GROUP BY director HAVING COUNT(director)>1) ORDER BY director;
16. SELECT name, title FROM (SELECT rid, mid, max(stars) as max_stars, max(ratingdate) as max_date FROM rating GROUP BY rid, mid HAVING COUNT(rid)=2) as tmp JOIN reviewer ON reviewer.rid=tmp.rid JOIN movie ON movie.mid=tmp.mid JOIN rating ON rating.rid=tmp.rid AND rating.mid=tmp.mid WHERE stars = max_stars AND ratingdate=max_date;
