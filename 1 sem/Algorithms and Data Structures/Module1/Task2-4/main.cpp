/*2_4.​ “Считалочка”. 
 * В круг выстроено N человек, пронумерованных числами от 1 до N. 
 * Будем исключать  каждого k­ого до тех пор, пока не уцелеет только один человек. 
 * (Например, если N=10, k=3, то сначала  умрет 3­й, потом 6­й, затем 9­й, 
 * затем 2­й, затем 7­й, потом 1­й, потом 8­й, за ним ­ 5­й, и потом 10­й. 
 * Таким  образом, уцелеет 4­й.) Необходимо определить номер уцелевшего. 
 * N, k ≤ 10000.*/
#include <iostream>
#include <assert.h>

using namespace std;

int check(int n, int k) {
    int count = 0;
    //количество людей
    count = n;

    //заполняю массив, true - означает, что человек еще не выбыл
    bool *array = new bool[n];
    for (int i = 0; i < n; ++i) {
        array[i] = true;
    }

    //step - это счетчик, сколько людей мы прошли по считалочке, до момента выбывания одного человека
    //index - позиция вылетающего человека
    int step = 0, index = k;
    //нахожусь в цикое пока не останется один человек
    while (count != 1) {
        //убираем из массива выбывшего
        array[index] = false;
        //находимся в цикле пока не обойдем кол-во людей, равное шагу k
        while (step != k) {
            ++index;

            //если мы дошли до конца массива, возвращаеся в начало
            if (index == n) {
                index = 0;
            }

            //если человек еще не выбыл, то засчитываем его
            if (array[index]) {
                ++step;
            }
        }
        //обнуляем счетчик
        step = 0;
        //уменьшаем кол-во людей, учавствующих в считалочке
        --count;
    }

    delete[] array;
    return index;
}

int main() {
    int n = 0, k = 0;
    //ввод
    cin >> n >> k;
    assert(n <= 10000 && n > 0 && k <= 10000 && k > 0);

    int result = check(n, k);

    //вывод
    cout << result << endl;
    return 0;
}